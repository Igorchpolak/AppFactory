---
import Layout from "../layouts/Layout.astro";
import Article from "../components/Article.astro";
import Pagination from "../components/Pagination.astro";
import SearchBar from "../components/SearchBar.astro";

export async function getStaticPaths() {
  // First, get the total count of posts to calculate pagination
  const countResponse = await fetch(
    "http://whellworks.local/wp-json/wp/v2/posts?per_page=1"
  );
  const totalPosts = parseInt(countResponse.headers.get("X-WP-Total") || "0");
  const postsPerPage = 6; // Set to display 5 posts per page
  const totalPages = Math.ceil(totalPosts / postsPerPage);

  // Generate page routes, but don't fetch content yet
  const paths = Array.from({ length: totalPages }, (_, i) => {
    return {
      params: { page: i === 0 ? undefined : (i + 1).toString() },
      props: {
        currentPage: i + 1,
        totalPages,
        totalPosts,
        postsPerPage,
      },
    };
  });

  return paths;
}

// Get page details from props
const { currentPage, totalPages, totalPosts, postsPerPage } = Astro.props;

// Now fetch only the posts needed for this specific page
const offset = (currentPage - 1) * postsPerPage;
const response = await fetch(
  `http://whellworks.local/wp-json/wp/v2/posts?_embed&per_page=${postsPerPage}&offset=${offset}`
);
const posts = await response.json();

// Create pagination URLs for the component
const url = {
  prev:
    currentPage > 1
      ? currentPage === 2
        ? "/"
        : `/${currentPage - 1}`
      : null,
  next: currentPage < totalPages ? `/${currentPage + 1}` : null,
  current: currentPage === 1 ? "/" : `/${currentPage}`,
};
---

<Layout title={`Blog - Page ${currentPage}`}>
  <SearchBar/>
  <div class="container mx-auto">
    <div class="mx-auto my-10 w-full flex justify-center flex-wrap gap-10">
      {
        posts.map((post) => (
        <Article
              title={post.title.rendered}
              content={post.content.rendered}
              slug={post.slug}
              date={new Date(post.date).toLocaleDateString()}
              photoUrl={
                post._embedded?.["wp:featuredmedia"]?.[0]?.source_url || null
              }
            />
        ))
      }
    </div>

    <Pagination currentPage={currentPage} lastPage={totalPages} url={url} />

    <div class="text-center text-sm text-gray-600 dark:text-gray-400 mt-4">
      Showing posts {offset + 1}-{Math.min(offset + postsPerPage, totalPosts)} of
      {totalPosts}
    </div>
  </div>
</Layout>

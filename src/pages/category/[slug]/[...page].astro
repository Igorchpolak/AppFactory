---
import Layout from "../../../layouts/Layout.astro";
import Article from "../../../components/Article.astro";
import SearchBar from "../../../components/SearchBar.astro";
import Pagination from "../../../components/Pagination.astro";
const apiUrl = 'http://igor.z0fil5dsgi-xlm41ok1r6dy.p.temp-site.link/'

// const apiUrl = import.meta.env.WORDPRESS_REST_API_URL;


// Define static paths for categories with pagination
export async function getStaticPaths() {
  // Fetch all categories from WordPress
  const categoriesResponse = await fetch(
    `${apiUrl}/wp-json/wp/v2/categories`
  );
  const categories = await categoriesResponse.json();

  // Create an array to store all paths
  const paths = [];

  // For each category, create paginated routes
  for (const category of categories) {
    // Get post count for this category
    const countResponse = await fetch(
      `http://igor.z0fil5dsgi-xlm41ok1r6dy.p.temp-site.link/wp-json/wp/v2/posts?categories=${category.id}&per_page=1`
    );
    const totalPosts = parseInt(countResponse.headers.get("X-WP-Total") || "0");
    const postsPerPage = 6;
    const totalPages = Math.ceil(totalPosts / postsPerPage);

    // Generate paths for each page in this category
    for (let i = 0; i < totalPages; i++) {
      paths.push({
        params: {
          slug: category.slug,
          page: i === 0 ? undefined : (i + 1).toString(),
        },
        props: {
          category: {
            id: category.id,
            name: category.name,
            slug: category.slug,
            description: category.description,
          },
          currentPage: i + 1,
          totalPages,
          totalPosts,
          postsPerPage,
        },
      });
    }
  }

  return paths;
}

// Get page details from props
const { category, currentPage, totalPages, totalPosts, postsPerPage } =
  Astro.props;

// Now fetch only the posts needed for this specific category and page
const offset = (currentPage - 1) * postsPerPage;
const response = await fetch(
  `http://igor.z0fil5dsgi-xlm41ok1r6dy.p.temp-site.link/wp-json/wp/v2/posts?_embed&categories=${category.id}&per_page=${postsPerPage}&offset=${offset}`
);
const posts = await response.json();

// Create pagination URLs for the component
const url = {
  prev:
    currentPage > 1
      ? currentPage === 2
        ? `/category/${category.slug}`
        : `/category/${category.slug}/${currentPage - 1}`
      : null,
  next:
    currentPage < totalPages
      ? `/category/${category.slug}/${currentPage + 1}`
      : null,
  current:
    currentPage === 1
      ? `/category/${category.slug}`
      : `/category/${category.slug}/${currentPage}`,
};
---

<Layout>
  <SearchBar />
  <div class="container mx-auto 2xl:mx-0 w-[calc(100vw-1.2rem)]">
    <div class=" min-h-[calc(100vh-20.5rem)] 2xl:w-[calc(100vw-1.2rem)]">
      <div class="mx-auto 2xl:mx-0  my-10 w-full flex justify-center flex-wrap gap-10">
        {
          posts.map((post) => (
            <Article
              title={post.title.rendered}
              content={post.content.rendered}
              slug={post.slug}
              date={new Date(post.date).toLocaleDateString()}
              photoUrl={
                post._embedded?.["wp:featuredmedia"]?.[0]?.source_url || null
              }
            />
          ))
        }
      </div>
    </div>

    <Pagination currentPage={currentPage} lastPage={totalPages} url={url} />
  </div>
</Layout>
